1. 协议的概念

	

2. b/s c/s

	C/S  优点：   1. 协议选用灵活。  2. 缓存数据。

	     缺点：   1. 对用户的安全构成威胁  2. 开发工作量较大，调试困难


	B/S  优点：   1.  2.  3. 跨平台

	     缺点：   1. http   2.  

	使用场景。

	pad：    iphone 4   ipad 9    mac 11 13

	

3. 分层模型   7   4

	寻路：通过路由表找到下一个路由节点 → 广播一个ARP请求，请求拿到下一个路由节点的Mac地址 → 另一个路由节点拿到ARP请求，
发现该IP地址是自己的，则把ARP请求里填充自己的Mac地址，将包发回到源路由器  → 源路由器拿到ARP包，将IP地址对应的Mac地址填到
以太网帧，将数据包继续投放到网络

4. 协议格式

	数据包基本格式  数-应-传-网-链路

	以太网帧格式  （记录本次转发的源地址和转发目的地址）
                  下一跳Mac(6) 本帧发送Mac(6) 数据 CRC
                  能传输46~1500字节数据（46 <= 应用层数据+传输层报头+IP层报头 <= 1500）

	arp数据包格式 --- arp攻击
                  ARP:借助IP地址请求Mac地址     RARP：借助Mac地址请求IP地址

	IP段格式 -- IP 32 unsigned int（记录数据包的源IP 和 目的主机的IP）
                 4位版本号、4位首部长度、8位生存时间、16位总长度、32位源IP地址和目的IP地址
                 最大携带65535长度的数据。

	TCP/UDP  --  prot 16位源port和目的port  --- 0 ~ 65535  

    IP协议最大携带65535字节数据  而以太网帧协议最大携带1400+字节数据，原因是IP协议需保证兼容性，可以由其他协议代替以太网帧
协议进行工作。

5. NAT映射   打洞机制

6. 套接字

	1. 成对出现

	2. bind  IP port

	3. 一个fd 两个buf  

7. TCP  

	预备知识。

		"192.168.1.24" --》unsigned int -》 htonl() -》 网络字节序

				   10101010101001  -->　１０１０１０１０１０１００１０１
	
		192.168.1.24 ------------------> 网络字节序  inet_pton();

		网络字节序 ------------------> 点分十进制字符串  inet_ntop();

	struct sockaddr_in addr;
	
	addr.sin_family = AF_INET/AFINET6;
	addr.sin_port = htons/ntohs;
	addr.sin_addr.s_addr = htonl; ntosl;  inet_pton  inet_ntop;
		
	bind( , （struct sockaddr *）&addr);

	accept();

	connect();

C/S模型
	server.c

		1. socket()  建立套接字

		2. bind() 绑定IP 端口号  (struct sockaddr_in addr 初始化)

		3. listen() 指定最大同时发起连接数

		4. accept()  阻塞等待客户端发起连接

		5. read()
		
		6. 小--大

		7. write 给 客户端

		8. close();

	client.c

		1. socket();

		2. bind();  可以依赖“隐式绑定”

		3. connect();发起连接

		4. write();
		
		5. read();

		6. close();
#pragma once
#include "Public.h"
#include "PBMessage.pb.h"
#include "BattleMessage.pb.h"
#include "PacketDefine.h"

namespace Packets
{ 
	class $name$_PAK:public Packet
	{
	public:
		$name$_PAK():Packet(m_PacketData){}
		virtual ~$name$_PAK(){}
		virtual uint32_t		Execute( Player* pPlayer );
		virtual	PacketID_t	GetPacketID() const {return PACKET_$name$_PAK;}
	public:
		ProtobufPacket::$name$ m_PacketData;
	};

	class $name$_PAKFactory : public PacketFactory
	{
	public:
		Packet*	CreatePacket() { return new Packets::$name$_PAK(); }
		PacketID_t	GetPacketID()const { return PACKET_$name$_PAK ; }
	};

	class $name$_PAKHandler
	{
	public:
		static uint32_t Execute(Packets::$name$_PAK* pPacket, Player* pPlayer);
	};
}